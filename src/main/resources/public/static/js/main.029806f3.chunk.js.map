{"version":3,"sources":["images/titulinis.png","actions/projects.js","components/ProjectCard.js","selectors/projects.js","components/ProjectContainer.js","actions/filters.js","components/MainProjectPage.js","components/Homepage.js","components/PageTemplate.js","components/CreateProjectForm.js","components/TaskCard.js","components/NotFoundPage.js","components/ProjectInfoPage.js","selectors/tasks.js","components/CreateTaskForm.js","components/EditProjectForm.js","components/EditTaskForm.js","components/MaintenancePage.js","App.js","reducers/projectsReducer.js","reducers/filtersReducer.js","index.js","store/storeConfig.js"],"names":["module","exports","removeProjectById","id","removeTaskById","projectId","taskId","updateProject","update","ProjectCard","handleRemove","props","dispatch","Axios","delete","className","this","projectName","to","status","doneTasks","totalTasks","icon","faPencilAlt","onClick","faTrashAlt","Component","projects","searchBy","filterStatusBy","filter","project","searchByMatch","toLowerCase","includes","filterStatusByMatch","projectStatus","connect","state","selectProjects","filters","map","key","completeTasks","projectDescription","filterBySearch","search","type","name","placeholder","onChange","event","target","value","trim","preventDefault","Homepage","src","require","alt","PageTemplate","content","CreateProjectForm","useDispatch","history","useHistory","useState","projectManager","projectDeadline","setState","handleUpdate","validateFields","nameValid","length","descriptionValid","managerValid","dateValid","Date","parse","now","useEffect","console","log","style","resize","rows","disabled","payload","post","then","response","get","res","data","addProjects","goBack","alert","role","TaskCard","expanded","handleClick","handleDelete","faCaretDown","priority","deadline","created","modified","description","story","NotFoundPage","ProjectInfoPage","params","useParams","useSelector","find","parseInt","filteredTasks","tasks","task","taskName","taskStatus","selectTasks","listen","handleProjectDelete","window","confirm","push","handleSearchChange","handleFilterChange","parseStatus","parsePriority","undefined","href","toLocaleString","projectModifiedOn","projectCreatedOn","taskPriority","taskCreatedOn","toLocaleDateString","taskModifiedOn","taskDeadline","taskStory","taskDescription","CreateTaskForm","termValid","storyValid","EditProjectForm","handleClose","handleSubmit","patch","EditTaskForm","taskid","MaintenancePage","App","doneRetrieving","path","exact","component","render","React","projectsDefaultState","action","filtersDefaultState","store","createStore","combineReducers","projectReducer","filtersReducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.029806f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/titulinis.035ba094.png\";","///////////// PROJECTS ACTIONS\r\n\r\n// This action only takes an array. If no parameters are given, an empty array is used.\r\nexport const addProjects = (projects = []) => ({\r\n    \"type\": \"ADD_PROJECTS\",\r\n    projects\r\n});\r\n\r\n// Specify the Id of the projects you want to remove.\r\nexport const removeProjectById = (id) => ({\r\n    \"type\": \"REMOVE_PROJECT_BY_ID\",\r\n    id\r\n});\r\n\r\n//\r\nexport const addTasks = (projectId, tasks = []) => ({\r\n    \"type\": \"ADD_TASKS\",\r\n    projectId,\r\n    tasks\r\n})\r\n\r\n//\r\nexport const removeTaskById = (projectId, taskId) => ({\r\n    \"type\": \"REMOVE_TASK_BY_ID\",\r\n    projectId,\r\n    taskId\r\n})\r\n\r\n//\r\nexport const updateProject = (projectId, update = []) => ({\r\n    \"type\": \"UPDATE_PROJECT\",\r\n    projectId,\r\n    update\r\n})","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { removeProjectById } from '../actions/projects'\r\nimport Axios from 'axios'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ProjectCard extends Component {\r\n\r\n    handleRemove = () => {\r\n        this.props.dispatch(removeProjectById(this.props.projectId));\r\n        Axios.delete(`http://localhost:8080/api/projects/${this.props.projectId}`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li >\r\n                <div className=\"row pt-1 pl-3 pb-2 mt-1\">\r\n                    <div className=\"col-7\"> {this.props.projectName} </div>\r\n                    <span className=\"col-1\"> <Link to={`/projects/${this.props.projectId}`}>View project </Link></span>\r\n                    <div className=\"col-1\"> {this.props.status} </div>\r\n                    <div className=\"col-1\"> {this.props.doneTasks}/{this.props.totalTasks} </div>\r\n                    <div className=\"col-1\"> <Link to={`/projects/${this.props.projectId}/edit`}> <FontAwesomeIcon icon={faPencilAlt} /> </Link> </div>\r\n                    <span className=\"col-1\" onClick={this.handleRemove}> <FontAwesomeIcon icon={faTrashAlt} /> </span>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n","export default (projects, { searchBy, filterStatusBy }) => {\r\n    return projects.filter((project) => {\r\n        const searchByMatch = project.projectName.toLowerCase().includes(searchBy.toLowerCase());\r\n        const filterStatusByMatch = project.projectStatus.includes(filterStatusBy);\r\n        \r\n        return searchByMatch && filterStatusByMatch;\r\n    });\r\n}","import React from 'react'\r\nimport ProjectCard from './ProjectCard'\r\nimport { connect } from 'react-redux'\r\nimport selectProjects from '../selectors/projects';\r\n\r\nconst ProjectContainer = (props) => (\r\n    <>\r\n        <ul className=\"container-fluid list-unstyled\" id=\"projectContainer\">\r\n            {props.projects.map(project =>\r\n                <ProjectCard key={project.projectId} projectId={project.projectId} projectName={project.projectName} status={project.projectStatus} doneTasks={project.completeTasks}\r\n                    totalTasks={project.totalTasks} projectDescription={project.projectDescription} dispatch={props.dispatch}/>\r\n            )}\r\n        </ul>\r\n    </>\r\n);\r\n\r\n// Returns an array of projects that get run through a filter. The filter takes the current projects and filters them by the set\r\n// status AND search value.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: selectProjects(state.projects, state.filters)\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProjectContainer);\r\n\r\n// Can probably get rid of this component by moving it into MainProjectPage","////////////// FILTER ACTIONS\r\n\r\n// IMPORTANT: only pass valid project statuses to this. If no value is passed, the filter is reset .\r\n\r\nexport const filterStatusBy = (status = '') => ({\r\n    \"type\": \"FILTER_STATUS_BY\",\r\n    status\r\n});\r\n\r\nexport const filterBySearch = (search = '') => ({\r\n    \"type\": \"FILTER_By_SEARCH\",\r\n    search\r\n});","import React from 'react'\r\nimport ProjectContainer from './ProjectContainer'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { filterBySearch, filterStatusBy } from '../actions/filters'\r\n\r\nconst MainProjectPage = (props) => (\r\n    <div className=\"container\" id=\"pageHeader\">\r\n\r\n        <header className=\"text-center text-light my-4\">\r\n            <nav className=\"navbar navbar-expand navbar-light\">\r\n                <div className=\"collapse navbar-collapse\" id=\"left\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link to=\"/\"><div className=\"btn\" onClick={() => {\r\n                                props.dispatch(filterStatusBy(''));\r\n                                props.dispatch(filterBySearch(''));\r\n                            }}><i className=\"fa fa-home\"></i></div></Link>\r\n                        </li>\r\n                        <li className=\"nav-item active\">\r\n                        <Link to=\"/maintenance\"> <button className=\"btn\" onClick={() => {\r\n                                props.dispatch(filterStatusBy(''));\r\n                                props.dispatch(filterBySearch(''));\r\n                            }}><i className=\"fa fa-bars\"></i></button></Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <form className=\"search\">\r\n                                <input className=\"form-control m-auto\" type=\"text\" name=\"search\"\r\n                                    id=\"projectSearch\" placeholder=\"Search by name...\" onChange={(event) => {\r\n                                        props.dispatch(filterBySearch(event.target.value.trim()))\r\n                                    }} />\r\n                            </form>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"right\">\r\n                    <ul className=\"nav navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <span className=\"nav-link\" onClick={(event) => {\r\n                                event.preventDefault();\r\n                                props.dispatch(filterStatusBy())\r\n                            }} >ALL</span>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <span className=\"nav-link\" onClick={(event) => {\r\n                                event.preventDefault();\r\n                                props.dispatch(filterStatusBy(\"Not started\"))\r\n                            }} >NOT STARTED</span>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <span className=\"nav-link\" onClick={(event) => {\r\n                                event.preventDefault();\r\n                                props.dispatch(filterStatusBy(\"In progress\"))\r\n                            }} >IN PROGRESS</span>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <span className=\"nav-link\" onClick={(event) => {\r\n                                event.preventDefault();\r\n                                props.dispatch(filterStatusBy(\"Complete\"))\r\n                            }} >COMPLETE</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n            </nav>\r\n\r\n            <div>\r\n                <Link to=\"/projects/new\"><div className=\"new-project-link\" onClick={() => {\r\n                    props.dispatch(filterStatusBy(''));\r\n                    props.dispatch(filterBySearch(''));\r\n                }}>NEW PROJECT+</div></Link>\r\n            </div>\r\n        </header>\r\n        <br />\r\n\r\n        <ProjectContainer />\r\n\r\n        <br />\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        filters: state.filters\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MainProjectPage);","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Homepage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container1\">\r\n\r\n                <div className=\"box\">\r\n                    <h1>Project Task Management Program</h1>\r\n                    <h3>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<br />\r\n                        Maecenas porttitor congue massa. </h3>\r\n                    <Link to=\"/projects\"><button className=\"btn2\">Let’s start</button></Link>\r\n                    <div><img className=\"responsive\" id=\"homeImage\" src={require(\"../images/titulinis.png\")} alt=\"Homepage\" /></div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class PageTemplate extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\" id=\"pageHeader\">\r\n\r\n                <header className=\"text-center text-light my-4\">\r\n                    <nav className=\"navbar navbar-expand navbar-light\">\r\n                        <div className=\"collapse navbar-collapse\" id=\"left\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item active\">\r\n                                    <Link to=\"/\"><div className=\"btn\"><i className=\"fa fa-home\"></i></div></Link>\r\n                                </li>\r\n                                <li className=\"nav-item active\">\r\n                                    <Link to=\"/maintenance\"><button className=\"btn\"><i className=\"fa fa-bars\"></i></button></Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </header>\r\n\r\n                {this.props.content}\r\n\r\n                <br />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Link, useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addProjects } from '../actions/projects'\r\n\r\n\r\nfunction CreateProjectForm() {\r\n\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const [state, setState] = useState({\r\n        projectName: '',\r\n        projectDescription: '',\r\n        projectManager: '',\r\n        projectDeadline: ''\r\n    });\r\n\r\n    const handleUpdate = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        setState({\r\n            ...state,\r\n            [name]: value.trim()\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n       \r\n\r\n        if (validateFields()) {\r\n            event.target.disabled = true;\r\n            let payload = {\r\n                ...state,\r\n                \"projectStatus\": \"NOT_STARTED\"\r\n            };\r\n\r\n            Axios.post(`http://localhost:8080/api/projects/`, payload).then(function(response) {\r\n                if (response.status === 202) {\r\n                    Axios.get(`http://localhost:8080/api/projects/retrieve/${state.projectName}`).then(res => {\r\n                        const data = res.data;\r\n\r\n                        dispatch(addProjects([{\r\n                                ...data,\r\n                                \"projectStatus\": \"Not started\",\r\n                                \"totalTasks\": 0,\r\n                                \"completeTasks\": 0,\r\n                                \"tasks\": []\r\n                            }]));\r\n\r\n                        history.goBack();\r\n                     }); \r\n                } else {\r\n                    alert(\"Something went wrong, try again.\")\r\n                    event.target.disabled = false;\r\n                } \r\n            });\r\n            \r\n        } else {\r\n            alert(\"There are errors in your form, please try again.\");\r\n            event.target.disabled = false;\r\n        }\r\n\r\n    }\r\n\r\n    function validateFields() {\r\n        const { projectName, projectDescription, projectManager, projectDeadline } = { ...state };\r\n        const nameValid = (projectName.length < 100 && projectName !== '');\r\n        const descriptionValid = (projectDescription.length < 300 && projectDescription !== '');\r\n        const managerValid = (projectManager.length < 60 && projectManager !== '');\r\n        const dateValid = (projectDeadline !== '' && Date.parse(projectDeadline) >= Date.now());\r\n\r\n        return nameValid && descriptionValid && managerValid && dateValid;\r\n    }\r\n\r\n    // For debugging\r\n    useEffect(() => {\r\n        console.log(state);\r\n        console.log(validateFields());\r\n    })\r\n\r\n\r\n    return (\r\n\r\n        <form className=\"container col-7\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-2 col-form-label\">Project Name</label>\r\n                <div className=\"col-10\">\r\n                    <input type=\"name\" className=\"form-control\" id=\"inputName\" name=\"projectName\" onChange={handleUpdate} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form row\">\r\n                <label className=\"col-2 col-form-label\" >Description</label>\r\n                <div className=\"col-10\">\r\n                    <textarea className=\"form-control\" style={{ resize: \"none\" }} name=\"projectDescription\" id=\"inputdescription\" rows=\"5\" onChange={handleUpdate} ></textarea>\r\n                </div>\r\n            </div>\r\n            <br />\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-2 col-form-label\">Project Manager</label>\r\n                <div className=\"col-10\">\r\n                    <input type=\"projectmanager\" className=\"form-control\" id=\"inputProjectmanager\" name=\"projectManager\" onChange={handleUpdate} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-2 col-form-label\">Deadline</label>\r\n                <div className=\"col-10\">\r\n                    <input type=\"date\" className=\"form-control\" id=\"deadline\" name=\"projectDeadline\" onChange={handleUpdate} />\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group row text-right mb-3\">\r\n                <div className=\"col-12\">\r\n                    <button type=\"submit\" disabled={false} className=\"btn btn-primary\" onClick={handleSubmit}>Save</button>\r\n                    <Link to=\"/projects\"> <div className=\"btn btn-info\" role=\"button\">Close</div> </Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateProjectForm;\r\n\r\n\r\n//\r\n// Leaving old code below for clarity and posterity.\r\n//\r\n\r\n// class CreateProjectForm extends Component {\r\n\r\n\r\n//     state = {\r\n        // projectName: '',\r\n        // projectDescription: '',\r\n        // projectManager: '',\r\n        // projectDeadline: ''\r\n//     }\r\n\r\n    // handleUpdate = (event) => {\r\n    //     event.preventDefault();\r\n    //     const { name, value } = event.target;\r\n    //     this.setState({\r\n    //         [name]: value.trim()\r\n    //     }, () => console.log(this.state));\r\n\r\n    //     console.log(this.props)\r\n    // }\r\n\r\n    // validateFields() {\r\n    //     const { projectName, projectDescription, projectManager, projectDeadline} = { ...this.state };\r\n    //     const nameValid = (projectName.length < 100 && projectName !== '');\r\n    //     const descriptionValid = (projectDescription.length < 300 && projectDescription !== '');\r\n    //     const managerValid = (projectManager.length < 60 && projectManager !== '');\r\n    //     const dateValid = (projectDeadline !== '' && Date.parse(projectDeadline) >= Date.now()); \r\n\r\n    //     return nameValid && descriptionValid && managerValid && dateValid;\r\n    // }\r\n\r\n\r\n//     handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n//         if (this.validateFields()) {\r\n\r\n            // let payload = {\r\n            //     ...this.state,\r\n            //     \"projectStatus\": \"Not started\",\r\n            //     \"totalTasks\": 0,\r\n            //     \"completeTasks\": 0\r\n            // }\r\n\r\n            // Axios.post(`http://localhost:8080/projects/`, payload);\r\n\r\n//         } else {\r\n            // alert(\"There are errors in your form, please try again.\")\r\n//         }\r\n//     }\r\n\r\n\r\n\r\n//     render() {\r\n//         return (\r\n\r\n//             <form className=\"container col-7\">\r\n//                 <div className=\"form-group row\">\r\n//                     <label className=\"col-2 col-form-label\">Project Name</label>\r\n//                     <div className=\"col-10\">\r\n//                         <input type=\"name\" className=\"form-control\" id=\"inputName\" name=\"projectName\" onChange={(event) => this.handleUpdate(event)} />\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"form row\">\r\n//                     <label className=\"col-2 col-form-label\" >Description</label>\r\n//                     <div className=\"col-10\">\r\n//                         <textarea className=\"form-control\" style={{ resize: \"none\" }} name=\"projectDescription\" id=\"inputdescription\" rows=\"5\" onChange={(event) => this.handleUpdate(event)} ></textarea>\r\n//                     </div>\r\n//                 </div>\r\n//                 <br />\r\n\r\n//                 <div className=\"form-group row\">\r\n//                     <label className=\"col-2 col-form-label\">Project Manager</label>\r\n//                     <div className=\"col-10\">\r\n//                         <input type=\"projectmanager\" className=\"form-control\" id=\"inputProjectmanager\" name=\"projectManager\" onChange={(event) => this.handleUpdate(event)} />\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group row\">\r\n//                     <label className=\"col-2 col-form-label\">Deadline</label>\r\n//                     <div className=\"col-10\">\r\n//                         <input type=\"date\" className=\"form-control\" id=\"deadline\" name=\"projectDeadline\" onChange={(event) => this.handleUpdate(event)} />\r\n\r\n//                     </div>\r\n//                 </div>\r\n\r\n\r\n//                 <div className=\"form-group row text-right mb-3\">\r\n//                     <div className=\"col-12\">\r\n//                         <button type=\"submit\" className=\"btn btn-primary\" onClick={(event) => this.handleSubmit(event)}>Save</button>\r\n//                         <Link to=\"/projects\"> <div className=\"btn btn-info\" role=\"button\">Close</div> </Link>\r\n//                         {/* TODO: add confirmation dialog when closing. */}\r\n//                         {/* TODO: send user to the project overview page when the correct data is submitted.*/}\r\n//                     </div>\r\n\r\n//                 </div>\r\n\r\n//             </form>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default withRouter(CreateProjectForm);","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\nimport Axios from 'axios';\r\nimport { removeTaskById } from '../actions/projects';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class TaskCard extends Component {\r\n\r\n    state = {\r\n        expanded: false\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({\r\n            expanded: !this.state.expanded\r\n        })\r\n    }\r\n\r\n    handleDelete = (event) => {\r\n        event.preventDefault();\r\n        Axios.delete(`http://localhost:8080/api/projects/${this.props.projectId}/tasks/${this.props.id}`);\r\n        this.props.dispatch(removeTaskById(this.props.projectId, this.props.id));\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <tbody>\r\n                <tr className=\"row\">\r\n                    <td className=\"col-1\"> {this.props.id} </td>\r\n                    <td className=\"col-3\"> {this.props.name} </td>\r\n                    <td className=\"col-1 text-center\" onClick={this.handleClick}> <span><FontAwesomeIcon icon={faCaretDown} /> </span></td>\r\n                    <td className=\"col-1 text-center\"> {this.props.priority} </td>\r\n                    <td className=\"col-1 text-center\"> {this.props.status} </td>\r\n                    <td className=\"col-1 text-center\"> {this.props.deadline} </td>\r\n                    <td className=\"col-1 text-center\"> {this.props.created} </td>\r\n                    <td className=\"col-1 text-center\"> {this.props.modified} </td>\r\n                    <td className=\"col-1 text-center\"> <Link to={`/projects/${this.props.projectId}/tasks/${this.props.id}/edit`}><FontAwesomeIcon icon={faPencilAlt} /></Link></td>\r\n                    <td className=\"col-1 text-center\" onClick={this.handleDelete}> <span><FontAwesomeIcon icon={faTrashAlt} /> </span></td>\r\n                </tr>\r\n                {this.state.expanded &&\r\n                    <tr className=\"row\">\r\n                        <td className=\"col-1\"> </td>\r\n                        <td className=\"col-5\"> <b> Project description: </b>{this.props.description} </td>\r\n                        <td className=\"col-6\"> <b> Project story: </b> {this.props.story} </td>\r\n                    </tr>\r\n                }\r\n            </tbody>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NotFoundPage() {\r\n    return (\r\n        <div className=\"container\" id=\"page404\">\r\n            <div className=\"page-wrap d-flex flex-row align-items-center\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span className=\"display-1 d-block\">404</span>\r\n                            <div className=\"mb-4 lead\">The page you are looking for was not found</div>\r\n                            <Link to=\"/\"> <span className=\"btn btn-link\" style={{\"text-decoration\": \"none\"}}>Back to Home</span> </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage;","import React, { useEffect } from 'react';\r\nimport TaskCard from './TaskCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams, useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { removeProjectById } from '../actions/projects';\r\nimport NotFoundPage from './NotFoundPage';\r\nimport selectTasks from '../selectors/tasks';\r\nimport { filterBySearch, filterStatusBy } from '../actions/filters'\r\n\r\n\r\nfunction ProjectInfoPage() {\r\n\r\n    let dispatch = useDispatch();\r\n    let params = useParams();\r\n    let history = useHistory();\r\n\r\n    const project = useSelector(state => state.projects.find(({ projectId }) => projectId === parseInt(params.id)));\r\n    const filters = useSelector(state => state.filters)\r\n\r\n    const filteredTasks = selectTasks(project.tasks, filters);\r\n\r\n\r\n    // Clears filters when navigating away from the page.\r\n    useEffect(() => {\r\n        history.listen(() => {\r\n            dispatch(filterBySearch());\r\n            dispatch(filterStatusBy());\r\n        })\r\n    }, [dispatch, history])\r\n\r\n    const handleProjectDelete = (event) => {\r\n        event.preventDefault();\r\n        if (window.confirm(\"Are you sure you want to delete this project?\")) {\r\n            Axios.delete(`http://localhost:8080/api/projects/${params.id}`);\r\n            dispatch(removeProjectById(parseInt(params.id)));\r\n            history.push(`/projects`);\r\n        }\r\n    }\r\n\r\n    const handleSearchChange = (event) => {\r\n        event.preventDefault();\r\n        dispatch(filterBySearch(event.target.value.trim()));\r\n    }\r\n\r\n    const handleFilterChange = (event, filter) => {\r\n        event.preventDefault();\r\n        dispatch(filterStatusBy(filter));\r\n    }\r\n\r\n    // Yeah, this is a bad solution, but I messed up the initial setup and I'm too lazy to fix it now, don't judge me. :(\r\n    function parseStatus(status) {\r\n        switch (status) {\r\n            case 'IN_PROGRESS':\r\n                return 'In progress';\r\n            case 'NOT_STARTED':\r\n                return 'Not started';\r\n            case 'COMPLETE':\r\n                return 'Complete';\r\n            default:\r\n                return 'Canceled';\r\n        }\r\n    }\r\n\r\n    function parsePriority(priority) {\r\n        switch (priority) {\r\n            case 'HIGH':\r\n                return 'High';\r\n            case 'MEDIUM':\r\n                return 'Medium';\r\n            default:\r\n                return 'Low';\r\n        }\r\n    }\r\n\r\n    function pageFound() {\r\n        if (project === undefined) {\r\n            return <NotFoundPage />\r\n        } else {\r\n            return (\r\n                <div className=\"container\" id=\"pageHeader\">\r\n\r\n                    <header className=\"text-center text-light my-4\">\r\n                        <nav className=\"navbar navbar-expand navbar-light\">\r\n                            <div className=\"collapse navbar-collapse\" id=\"left\">\r\n                                <ul className=\"navbar-nav mr-auto\">\r\n                                    <li className=\"nav-item active\">\r\n                                        <Link to=\"/\"><div className=\"btn\"><i className=\"fa fa-home\"></i></div></Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item active\">\r\n                                        <Link to=\"/maintenance\"><button className=\"btn\"><i className=\"fa fa-bars\"></i></button></Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <form className=\"search\">\r\n                                            <input className=\"form-control m-auto\" type=\"text\" name=\"search\" placeholder=\"Search for tasks...\"\r\n                                                onChange={handleSearchChange} />\r\n                                        </form>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className=\"collapse navbar-collapse\" id=\"right\">\r\n                                <ul className=\"nav navbar-nav ml-auto\">\r\n                                    <li className=\"nav-item\">\r\n                                        <Link to={`/projects/${params.id}/edit`}><span className=\"nav-link\" href=\"/#\">EDIT PROJECT</span></Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <span className=\"nav-link\" onClick={handleProjectDelete}>DELETE PROJECT</span>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link to=\"/projects\"> <span className=\"nav-link\">CLOSE</span> </Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </nav>\r\n                    </header>\r\n\r\n                    <div className=\"my-projectcontainer\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col\"> <b> Project ID: </b> {params.id} </div>\r\n                                <div className=\"col\"> <b> Name: </b> {project.projectName} </div>\r\n                                <div className=\"col\"> <b> Status: </b> {project.projectStatus}s</div>\r\n                                <div className=\"w-100\"></div>\r\n                                <div className=\"col\"> <b> Deadline: </b> {new Date(project.projectDeadline).toLocaleString('lt-LT')} </div>\r\n                                <div className=\"col\"> <b> Project manager: </b> {project.projectManager}</div>\r\n                                <div className=\"col\"> <b> Modified on: </b> {new Date(project.projectModifiedOn).toLocaleString('lt-LT')} </div>\r\n                                <div className=\"w-100\"></div>\r\n                                <div className=\"col\"> <b> Create date: </b> {new Date(project.projectCreatedOn).toLocaleString('lt-LT')} </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container my-description\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\"> <b> Description: </b> {project.projectDescription} </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"my-taskbar\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div><span className=\"col\" onClick={(event) => handleFilterChange(event, '')}>ALL</span></div>\r\n                                <div><span className=\"col\" onClick={(event) => handleFilterChange(event, \"NOT_STARTED\")}>NOT STARTED</span></div>\r\n                                <div><span className=\"col\" onClick={(event) => handleFilterChange(event, \"IN_PROGRESS\")}>IN PROGRESS</span></div>\r\n                                <div><span className=\"col\" onClick={(event) => handleFilterChange(event, \"CANCELED\")}>CANCELED</span></div>\r\n                                <div><span className=\"col\" onClick={(event) => handleFilterChange(event, \"COMPLETE\")}>COMPLETE</span></div>\r\n                                <Link to={`/projects/${params.id}/tasks/create`}> <div><span className=\"col\">NEW TASK+</span></div> </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"my-table container-fluid\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr className=\"row\">\r\n                                    <th className=\"col-1\"> ID </th>\r\n                                    <th className=\"col-3 \"> NAME </th>\r\n                                    <th className=\"col-1 text-center\"> INFO </th>\r\n                                    <th className=\"col-1 text-center\"> PRIORITY </th>\r\n                                    <th className=\"col-1 text-center\"> STATUS </th>\r\n                                    <th className=\"col-1 text-center\"> DEADLINE </th>\r\n                                    <th className=\"col-1 text-center\"> CREATED ON </th>\r\n                                    <th className=\"col-1 text-center\"> MODIFIED ON </th>\r\n                                    <th className=\"col-1 text-center\"> EDIT </th>\r\n                                    <th className=\"col-1 text-center\"> DELETE </th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            {filteredTasks.map(task => <TaskCard\r\n                                key={task.taskId}\r\n                                id={task.taskId}\r\n                                name={task.taskName}\r\n                                priority={parsePriority(task.taskPriority)}\r\n                                created={new Date(task.taskCreatedOn).toLocaleDateString('lt-LT')}\r\n                                modified={new Date(task.taskModifiedOn).toLocaleDateString('lt-LT')}\r\n                                deadline={new Date(task.taskDeadline).toLocaleDateString('lt-LT')}\r\n                                status={parseStatus(task.taskStatus)}\r\n                                dispatch={dispatch}\r\n                                projectId={params.id}\r\n                                story={task.taskStory}\r\n                                description={task.taskDescription}\r\n                            />)}\r\n\r\n                        </table>\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        pageFound()\r\n    )\r\n}\r\n\r\n\r\nexport default ProjectInfoPage;\r\n\r\n\r\n// // Read more about ownProps\r\n// // Returns data on the currently accessed project.\r\n// const mapStateToProps = (state, ownProps) => {\r\n//     return {\r\n//         project: state.projects.find(({ projectId }) => projectId === parseInt(ownProps.match.params.id))\r\n//     };\r\n// };\r\n\r\n// class ProjectInfoPage extends Component {\r\n\r\n//     state = {\r\n//         doneRetrieving: false\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         // console.log(`Welcome to project ID #${this.props.match.params.id}`);\r\n//         // console.log(this.props.project);\r\n//         Axios.get(`http://localhost:8080/projects/${this.props.project.projectId}/tasks`).then(res => {\r\n//             const data = res.data;\r\n//             this.props.dispatch(addTasks(parseInt(this.props.match.params.id), data));\r\n//             this.setState({ doneRetrieving: true })\r\n//         });\r\n\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className=\"container\" id=\"pageHeader\">\r\n\r\n//                 <header className=\"text-center text-light my-4\">\r\n//                     <nav className=\"navbar navbar-expand navbar-light\">\r\n//                         <div className=\"collapse navbar-collapse\" id=\"left\">\r\n//                             <ul className=\"navbar-nav mr-auto\">\r\n//                                 <li className=\"nav-item active\">\r\n//                                     <Link to=\"/\"><div className=\"btn\"><i className=\"fa fa-home\"></i></div></Link>\r\n//                                 </li>\r\n//                                 <li className=\"nav-item active\">\r\n//                                     <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\r\n//                                 </li>\r\n//                                 <li className=\"nav-item\">\r\n//                                     <form className=\"search\">\r\n//                                         <input className=\"form-control m-auto\" type=\"text\" name=\"search\" placeholder=\"Search for tasks...\" />\r\n//                                     </form>\r\n//                                 </li>\r\n//                             </ul>\r\n//                         </div>\r\n\r\n//                         <div className=\"collapse navbar-collapse\" id=\"right\">\r\n//                             <ul className=\"nav navbar-nav ml-auto\">\r\n//                                 <li className=\"nav-item active\">\r\n//                                     <a className=\"nav-link\" href=\"/#\">EDIT PROJECT</a>\r\n//                                 </li>\r\n//                                 <li className=\"nav-item\">\r\n//                                     <a className=\"nav-link\" href=\"/#\">DELETE PROJECT</a>\r\n//                                 </li>\r\n//                                 <li className=\"nav-item\">\r\n//                                     <Link to=\"/projects\"> <div className=\"nav-link\">CLOSE</div> </Link>\r\n//                                 </li>\r\n//                             </ul>\r\n//                         </div>\r\n//                     </nav>\r\n//                 </header>\r\n\r\n//                 {/* <!-- Everything else goes here --> */}\r\n\r\n//                 <div className=\"my-projectcontainer\">\r\n//                     <div className=\"container\">\r\n//                         <div className=\"row\">\r\n//                             <div className=\"col\"> <b> Project ID: </b> {this.props.project.projectId} </div>\r\n//                             <div className=\"col\"> <b> Name: </b> {this.props.project.projectName} </div>\r\n//                             <div className=\"col\"> <b> Status: </b> {this.props.project.projectStatus}s</div>                                            \r\n//                             <div className=\"w-100\"></div>\r\n//                             <div className=\"col\"> <b> Deadline: </b> {new Date(this.props.project.projectDeadline).toLocaleString('lt-LT')} </div>\r\n//                             <div className=\"col\"> <b> Project manager: </b> {this.props.project.projectManager}</div>\r\n//                             <div className=\"col\"> <b> Modified on: </b> {new Date(this.props.project.projectModifiedOn).toLocaleString('lt-LT')} </div>                        \r\n//                             <div className=\"w-100\"></div>\r\n//                             <div className=\"col\"> <b> Create date: </b> {new Date(this.props.project.projectCreatedOn).toLocaleString('lt-LT')} </div>\r\n\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className=\"container my-description\">\r\n//                         <div className=\"row\">\r\n//                             <div className=\"col-12\"> <b> Description: </b> {this.props.project.projectDescription} </div>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n\r\n\r\n//                 <div className=\"my-taskbar\">\r\n//                     <div className=\"container\">\r\n//                         <div className=\"row\">\r\n//                             <div><a className=\"col\" href=\"/#\">ALL</a></div>\r\n//                             <div><a className=\"col\" href=\"/#\">NOT STARTED</a></div>\r\n//                             <div><a className=\"col\" href=\"/#\">IN PROGRESS</a></div>\r\n//                             <div><a className=\"col\" href=\"/#\">CLOSED</a></div>\r\n//                             <Link to={`/projects/${this.props.project.projectId}/tasks/create`}> <div><span className=\"col\">NEW TASK+</span></div> </Link>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"my-table\">\r\n//                     <table className=\"table\">\r\n//                         <thead>\r\n//                             <tr>\r\n//                                 <th className=\"col-1\">ID</th>\r\n//                                 <th className=\"col-4\">NAME</th>\r\n//                                 <th className=\"col-1\">PRIORITY</th>\r\n//                                 <th className=\"col-1\">STATUS</th>\r\n//                                 <th className=\"col-1\">CREATED ON</th>\r\n//                                 <th className=\"col-1\">MODIFIED ON</th>\r\n//                                 <th className=\"col-1\">DEADLINE</th>\r\n//                                 <th className=\"col-1\">VIEW</th>\r\n//                                 <th className=\"col-1\">DEL</th>\r\n//                             </tr>\r\n//                         </thead>\r\n//                         <tbody>\r\n\r\n//                             {this.state.doneRetrieving ?\r\n//                                 this.props.project.tasks.map(task => <TaskCard \r\n//                                     key={task.taskId}\r\n//                                     id={task.taskId}\r\n//                                     name={task.taskName}\r\n//                                     priority={task.taskPriority}\r\n//                                     created={new Date(task.taskCreatedOn).toLocaleDateString('lt-LT')}\r\n//                                     modified={new Date(task.taskModifiedOn).toLocaleDateString('lt-LT')}\r\n//                                     deadline={new Date(task.taskDeadline).toLocaleDateString('lt-LT')}\r\n//                                     status={task.taskStatus}\r\n//                                 />) : null}\r\n\r\n//                         </tbody>\r\n//                     </table>\r\n//                     <br />\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default connect(mapStateToProps)(ProjectInfoPage);","export default (tasks, { searchBy, filterStatusBy }) => {\r\n    return tasks.filter((task) => {\r\n        const searchByMatch = task.taskName.toLowerCase().includes(searchBy.toLowerCase());\r\n        const filterStatusByMatch = task.taskStatus.includes(filterStatusBy);\r\n        \r\n        return searchByMatch && filterStatusByMatch;\r\n    });\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams, useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateProject } from '../actions/projects'\r\n\r\nfunction CreateTaskForm() {\r\n\r\n    let dispatch = useDispatch();\r\n    let params = useParams();\r\n    let history = useHistory();\r\n\r\n    const [state, setState] = useState({\r\n        taskName: '',\r\n        taskDescription: '',\r\n        taskPriority: \"LOW\",\r\n        taskStatus: \"NOT_STARTED\",\r\n        taskDeadline: '',\r\n        taskStory: ''\r\n    });\r\n\r\n    function validateFields() {\r\n        const { taskName, taskDescription, taskDeadline, taskStory } = { ...state };\r\n        const nameValid = (taskName.length < 100 && taskName !== '');\r\n        const descriptionValid = (taskDescription.length < 300 && taskDescription !== '');\r\n        const termValid = (taskDeadline !== '' && Date.parse(taskDeadline) >= Date.now());\r\n        const storyValid = (taskStory !== '' && taskStory.length < 500);\r\n\r\n\r\n        return nameValid && descriptionValid && termValid && storyValid;\r\n    }\r\n\r\n    const handleUpdate = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        setState({\r\n            ...state,\r\n            [name]: value.trim()\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        event.target.disabled = true;\r\n\r\n        if (validateFields()) {\r\n            let payload = {\r\n                ...state\r\n            };\r\n\r\n            Axios.post(`http://localhost:8080/api/projects/${params.id}/tasks`, payload).then(response => {\r\n                if (response.status === 202) {\r\n                    Axios.get(`http://localhost:8080/api/projects/full/${params.id}`).then(response => {\r\n                        if (response.status === 200) {\r\n                            dispatch(updateProject(parseInt(params.id), response.data));\r\n                            history.push(`/projects/${params.id}`);\r\n                        } else {\r\n                            alert(\"Something went wrong, try again.\");\r\n                            event.target.disabled = false;\r\n                        }\r\n                    });\r\n                } else {\r\n                    alert(\"Something went wrong, try again.\");\r\n                    event.target.disabled = false;\r\n                }\r\n            });\r\n\r\n        } else {\r\n            alert(\"There are errors in your form, please try again.\");\r\n            event.target.disabled = false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // For debugging\r\n    useEffect(() => {\r\n        console.log(state);\r\n        console.log(validateFields());\r\n    })\r\n\r\n    return (\r\n        <form className=\"container col-md-6\" id=\"pageform\">\r\n            <div className=\"row\">\r\n                <label className=\"col-2\"> Project ID: </label>\r\n                <div className=\"col-10\"> {params.id} </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                <div className=\"col-sm-10\">\r\n                    <input onChange={handleUpdate} type=\"name\" className=\"form-control\" name=\"taskName\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form row\">\r\n                <label className=\"col-sm-2 col-form-label\">Description</label>\r\n                <div className=\"col-sm-10\">\r\n                    <textarea onChange={handleUpdate} className=\"form-control\" name=\"taskDescription\" style={{ resize: \"none\" }} rows=\"3\"></textarea>\r\n                </div>\r\n            </div>\r\n            <br />\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Priority</label>\r\n                <div className=\"col-sm-10\">\r\n                    <select onChange={handleUpdate} name=\"taskPriority\">\r\n                        <option value=\"LOW\">Low</option>\r\n                        <option value=\"MEDIUM\">Medium</option>\r\n                        <option value=\"HIGH\">High</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Status</label>\r\n                <div className=\"col-sm-10\">\r\n                    <select onChange={handleUpdate} name=\"taskStatus\">\r\n                        <option value=\"NOT_STARTED\">Not started</option>\r\n                        <option value=\"IN_PROGRESS\">In progress</option>\r\n                        <option value=\"COMPLETE\">Complete</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Deadline</label>\r\n                <div className=\"col-sm-10\">\r\n                    <input onChange={handleUpdate} type=\"date\" className=\"form-control\" name=\"taskDeadline\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form row\">\r\n                <label className=\"col-sm-2 col-form-label\">User story</label>\r\n                <div className=\"col-sm-10\">\r\n                    <textarea onChange={handleUpdate} className=\"form-control\" name=\"taskStory\" rows=\"5\" style={{ resize: \"none\" }}></textarea>\r\n                </div>\r\n            </div>\r\n            <br />\r\n\r\n            <br />\r\n            <div className=\"form-group row text-right mb-3\">\r\n                <div className=\"col-sm-12\">\r\n                    <button onClick={handleSubmit} type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                    <Link to={`/projects/${params.id}`}><div className=\"btn btn-info\" role=\"button\">Close</div></Link>\r\n                </div>\r\n            </div>\r\n        </form >\r\n\r\n    )\r\n}\r\n\r\nexport default CreateTaskForm;\r\n\r\n//\r\n// Old code below for clarity and posterity.\r\n//\r\n\r\n// class CreateTaskForm extends Component {\r\n\r\n//     state = {\r\n        // \"taskName\": '',\r\n        // \"taskDescription\": '',\r\n        // \"taskPriority\": \"Low\",\r\n        // \"taskStatus\": \"Not started\",\r\n        // \"taskDeadline\": '',        \r\n        // \"taskStory\": ''\r\n\r\n//     }\r\n\r\n//     handleUpdate = (event) => {\r\n//         event.preventDefault();\r\n//         const { name, value } = event.target;\r\n//         this.setState({\r\n//             [name]: value.trim()\r\n//         }, () => console.log(this.state));\r\n\r\n//     }\r\n\r\n    // validateFields() {        \r\n    //     const { taskName, taskDescription, taskDeadline, taskRole, taskStory, taskPurpose, taskAcceptance} = { ...this.state };\r\n    //     const nameValid = (taskName.length < 100 && taskName !== '');\r\n    //     const descriptionValid = (taskDescription.length < 300 && taskDescription !== '');\r\n    //     const termValid = (taskDeadline !== '' && Date.parse(taskDeadline) >= Date.now());\r\n    //     const storyValid = (taskStory !== '' && taskStory.length < 500);\r\n\r\n\r\n    //     return nameValid && descriptionValid && termValid && storyValid;        \r\n    // }\r\n\r\n//     handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n//         if (this.validateFields()) {\r\n\r\n//             const payload = {\r\n//                 ...this.state\r\n//             };\r\n\r\n//             console.log(\"submitting\");\r\n//             console.log(payload);\r\n//             Axios.post(`http://localhost:8080/projects/${this.props.match.params.id}/tasks`, payload);\r\n//             setTimeout(() => {\r\n//                 this.props.history.push(`/projects/${this.props.match.params.id}`);\r\n//             }, 500)\r\n\r\n//         } else {\r\n//             alert(\"There are errors in your form, please try again.\");\r\n//         }\r\n//     }\r\n\r\n\r\n//     render() {\r\n//         return (\r\n//             <form className=\"container col-md-6\" id=\"pageform\">\r\n//                 <div className=\"row\">\r\n//                     <label className=\"col-2\"> Project ID: </label>\r\n//                     <div className=\"col-10\"> {this.props.match.params.id} </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group row\">\r\n//                     <label className=\"col-sm-2 col-form-label\">Name</label>\r\n//                     <div className=\"col-sm-10\">\r\n//                         <input onChange={(event) => this.handleUpdate(event)} type=\"name\" className=\"form-control\" name=\"taskName\" />\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"form row\">\r\n//                     <label className=\"col-sm-2 col-form-label\">Description</label>\r\n//                     <div className=\"col-sm-10\">\r\n//                         <textarea onChange={(event) => this.handleUpdate(event)} className=\"form-control\" name=\"taskDescription\" style={{ resize: \"none\" }} rows=\"3\"></textarea>\r\n//                     </div>\r\n//                 </div>\r\n//                 <br />\r\n\r\n//                 <div className=\"form-group row\">\r\n//                     <label className=\"col-sm-2 col-form-label\">Priority</label>\r\n//                     <div className=\"col-sm-10\">\r\n//                         <select onChange={(event) => this.handleUpdate(event)} name=\"taskPriority\">\r\n//                             <option value=\"Low\">Low</option>\r\n//                             <option value=\"Medium\">Medium</option>\r\n//                             <option value=\"High\">High</option>\r\n//                         </select>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group row\">\r\n//                     <label className=\"col-sm-2 col-form-label\">Status</label>\r\n//                     <div className=\"col-sm-10\">\r\n//                         <select onChange={(event) => this.handleUpdate(event)} name=\"taskStatus\">\r\n//                             <option value=\"Not started\">Not started</option>\r\n//                             <option value=\"In progress\">In progress</option>\r\n//                             <option value=\"Done\">Done</option>\r\n//                         </select>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group row\">\r\n//                     <label className=\"col-sm-2 col-form-label\">Deadline</label>\r\n//                     <div className=\"col-sm-10\">\r\n//                         <input onChange={(event) => this.handleUpdate(event)} type=\"date\" className=\"form-control\" name=\"taskDeadline\" />\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"form row\">\r\n//                     <label className=\"col-sm-2 col-form-label\">User story</label>\r\n//                     <div className=\"col-sm-10\">\r\n//                         <textarea onChange={(event) => this.handleUpdate(event)} className=\"form-control\" name=\"taskStory\" rows=\"5\" style={{ resize: \"none\" }}></textarea>\r\n//                     </div>\r\n//                 </div>\r\n//                 <br />\r\n\r\n//                 <br />\r\n//                 <div className=\"form-group row text-right mb-3\">\r\n//                     <div className=\"col-sm-12\">                    \r\n//                         <button onClick={(event) => this.handleSubmit(event)} type=\"submit\" className=\"btn btn-primary\">Save</button>                      \r\n//                         <Link to={`/projects/${this.props.match.params.id}`}><div className=\"btn btn-info\" role=\"button\">Close</div></Link>\r\n//                     </div>\r\n//                 </div>\r\n//             </form >\r\n\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default withRouter(CreateTaskForm);\r\n","import { useHistory, useParams } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateProject } from '../actions/projects'\r\nimport NotFoundPage from './NotFoundPage';\r\n\r\n\r\nfunction EditProjectForm() {\r\n\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let params = useParams();\r\n    const project = useSelector(state => state.projects.find(({ projectId }) => projectId === parseInt(params.id)));\r\n\r\n    const [state, setState] = useState({\r\n        projectName: project.projectName,\r\n        projectDescription: project.projectDescription,\r\n        projectManager: project.projectManager || \"Add a manager\",\r\n        projectDeadline: new Date(project.projectDeadline).toLocaleDateString('lt-LT') || new Date(Date.now()).toLocaleDateString('lt-LT')\r\n    });\r\n\r\n    const handleUpdate = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        console.log(history)\r\n        setState({\r\n            ...state,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const handleClose = (event) => {\r\n        event.preventDefault();\r\n        history.goBack();\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        event.target.disabled = true;\r\n\r\n        if (validateFields()) {\r\n            let payload = {\r\n                ...state,\r\n            };\r\n\r\n            Axios.patch(`http://localhost:8080/api/projects/${params.id}`, payload).then(response => {\r\n                if (response.status === 200) {\r\n                    Axios.get(`http://localhost:8080/api/projects/full/${params.id}`).then(res => {\r\n                        const data = res.data;\r\n                        dispatch(updateProject(parseInt(params.id), data));\r\n                        history.goBack();\r\n                    });\r\n                } else {\r\n                    event.target.disabled = false;\r\n                }\r\n            });\r\n        } else {\r\n            alert(\"There are errors in your form, please try again.\");\r\n            event.target.disabled = false;\r\n        }\r\n\r\n    }\r\n\r\n    function validateFields() {\r\n        const { projectName, projectDescription, projectManager, projectDeadline } = { ...state };\r\n        const nameValid = (projectName.length < 100 && projectName.trim() !== '');\r\n        const descriptionValid = (projectDescription.length < 300 && projectDescription.trim() !== '');\r\n        const managerValid = (projectManager.length < 60 && projectManager.trim() !== '');\r\n        const dateValid = (projectDeadline !== '' && Date.parse(projectDeadline) >= Date.now());\r\n\r\n        return nameValid && descriptionValid && managerValid && dateValid;\r\n    }\r\n\r\n    // For debugging\r\n    useEffect(() => {\r\n        console.log(project);\r\n        console.log(validateFields());\r\n    })\r\n\r\n    function pageFound() {\r\n        if (project === undefined) {\r\n            return <NotFoundPage />\r\n        } else {\r\n            return (\r\n                <form className=\"container col-7\">\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-2 col-form-label\">Project Name</label>\r\n                        <div className=\"col-10\">\r\n                            <input type=\"name\" className=\"form-control\" id=\"inputName\" name=\"projectName\" value={state.projectName} onChange={handleUpdate} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form row\">\r\n                        <label className=\"col-2 col-form-label\" >Description</label>\r\n                        <div className=\"col-10\">\r\n                            <textarea className=\"form-control\" style={{ resize: \"none\" }} value={state.projectDescription} name=\"projectDescription\" id=\"inputdescription\" rows=\"5\" onChange={handleUpdate} ></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-2 col-form-label\">Project Manager</label>\r\n                        <div className=\"col-10\">\r\n                            <input type=\"projectmanager\" className=\"form-control\" value={state.projectManager} id=\"inputProjectmanager\" name=\"projectManager\" onChange={handleUpdate} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-2 col-form-label\">Deadline</label>\r\n                        <div className=\"col-10\">\r\n                            <input type=\"date\" className=\"form-control\" id=\"deadline\" value={state.projectDeadline} name=\"projectDeadline\" onChange={handleUpdate} />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group row text-right mb-3\">\r\n                        <div className=\"col-12\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={handleSubmit}>Save</button>\r\n                            <div className=\"btn btn-info\" role=\"button\" onClick={handleClose}>Close</div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        pageFound()\r\n\r\n    )\r\n}\r\n\r\nexport default EditProjectForm;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams, useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateProject } from '../actions/projects'\r\n\r\nfunction EditTaskForm() {\r\n\r\n    let dispatch = useDispatch();\r\n    let params = useParams();\r\n    let history = useHistory();\r\n    const task = useSelector(state => state.projects.find(({ projectId }) => projectId === parseInt(params.id)).tasks.find(({ taskId }) => taskId === parseInt(params.taskid)));\r\n\r\n\r\n    const [state, setState] = useState({\r\n        taskName: task.taskName,\r\n        taskDescription: task.taskDescription,\r\n        taskPriority: task.taskPriority,\r\n        taskStatus: task.taskStatus,\r\n        taskDeadline: new Date(task.taskDeadline).toLocaleDateString('lt-LT') || new Date(Date.now()).toLocaleDateString('lt-LT'),\r\n        taskStory: task.taskStory || \"Enter user story.\"\r\n    });\r\n\r\n    function validateFields() {\r\n        const { taskName, taskDescription, taskDeadline, taskStory } = { ...state };\r\n        const nameValid = (taskName.length < 100 && taskName !== '');\r\n        const descriptionValid = (taskDescription.length < 300 && taskDescription !== '');\r\n        const termValid = (taskDeadline !== '' && Date.parse(taskDeadline) >= Date.now());\r\n        const storyValid = (taskStory !== '' && taskStory.length < 500);\r\n\r\n        return nameValid && descriptionValid && termValid && storyValid;\r\n    }\r\n\r\n    const handleUpdate = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        setState({\r\n            ...state,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        event.target.disabled = true;\r\n\r\n        if (validateFields()) {\r\n            let payload = {\r\n                ...state\r\n            };\r\n\r\n            Axios.post(`http://localhost:8080/api/projects/${params.id}/tasks/${params.taskid}`, payload).then(response => {\r\n                if (response.status === 202) {\r\n                    Axios.get(`http://localhost:8080/api/projects/full/${params.id}`).then(response => {\r\n                        if (response.status === 200) {\r\n                            dispatch(updateProject(parseInt(params.id), response.data));\r\n                            history.goBack();\r\n                        } else {\r\n                            alert(\"Something went wrong, please try again.\")\r\n                            event.target.disabled = false;\r\n                        }\r\n                    });\r\n                } else {\r\n                    alert(\"Something went wrong, please try again.\")\r\n                    event.target.disabled = false;\r\n                }\r\n            });\r\n        } else {\r\n            alert(\"There are errors in your form, please try again.\");\r\n            event.target.disabled = false;\r\n        }\r\n    }\r\n\r\n    // For debugging\r\n    useEffect(() => {\r\n        console.log(state);\r\n        console.log(validateFields());\r\n    })\r\n\r\n    return (\r\n        <form className=\"container col-md-6\" id=\"pageform\">\r\n            <div className=\"row\">\r\n                <label className=\"col-2\"> Project ID: </label>\r\n                <div className=\"col-10\"> {params.id} </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                <div className=\"col-sm-10\">\r\n                    <input onChange={handleUpdate} value={state.taskName} type=\"name\" className=\"form-control\" name=\"taskName\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form row\">\r\n                <label className=\"col-sm-2 col-form-label\">Description</label>\r\n                <div className=\"col-sm-10\">\r\n                    <textarea onChange={handleUpdate} value={state.taskDescription} className=\"form-control\" name=\"taskDescription\" style={{ resize: \"none\" }} rows=\"3\"></textarea>\r\n                </div>\r\n            </div>\r\n            <br />\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Priority</label>\r\n                <div className=\"col-sm-10\">\r\n                    <select onChange={handleUpdate} value={state.taskPriority} name=\"taskPriority\">\r\n                        <option value=\"LOW\">Low</option>\r\n                        <option value=\"MEDIUM\">Medium</option>\r\n                        <option value=\"HIGH\">High</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Status</label>\r\n                <div className=\"col-sm-10\">\r\n                    <select onChange={handleUpdate} value={state.taskStatus} name=\"taskStatus\">\r\n                        <option value=\"NOT_STARTED\">Not started</option>\r\n                        <option value=\"IN_PROGRESS\">In progress</option>\r\n                        <option value=\"COMPLETE\">Complete</option>\r\n                        <option value=\"CANCELED\">Canceled</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Deadline</label>\r\n                <div className=\"col-sm-10\">\r\n                    <input onChange={handleUpdate} value={state.taskDeadline} type=\"date\" className=\"form-control\" name=\"taskDeadline\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form row\">\r\n                <label className=\"col-sm-2 col-form-label\">User story</label>\r\n                <div className=\"col-sm-10\">\r\n                    <textarea onChange={handleUpdate} value={state.taskStory} className=\"form-control\" name=\"taskStory\" rows=\"5\" style={{ resize: \"none\" }}></textarea>\r\n                </div>\r\n            </div>\r\n            <br />\r\n\r\n            <br />\r\n            <div className=\"form-group row text-right mb-3\">\r\n                <div className=\"col-sm-12\">\r\n                    <button onClick={handleSubmit} type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                    <Link to={`/projects/${params.id}`}><div className=\"btn btn-info\" role=\"button\">Close</div></Link>\r\n                </div>\r\n            </div>\r\n        </form >\r\n\r\n    )\r\n}\r\n\r\nexport default EditTaskForm;","import React from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport Axios from 'axios';\r\n\r\nfunction MaintenancePage() {\r\n\r\n    let history = useHistory();\r\n\r\n    const handleReturn = (event) => {\r\n        history.goBack();\r\n    }\r\n\r\n    const handleProjectRetrieval = (even) => {\r\n        // TODO\r\n    }\r\n\r\n    const handleTaskRetrieval = (even) => {\r\n        // TODO\r\n    }\r\n    \r\n    const handleReset = (even) => {\r\n        // TODO\r\n    }\r\n\r\n\r\n    return (\r\n        <div>Replace this with proper HTML</div>\r\n    )\r\n}\r\n\r\nexport default MaintenancePage;","import React from 'react';\r\nimport './App.css';\r\nimport MainProjectPage from './components/MainProjectPage';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Homepage from './components/Homepage';\r\nimport { addProjects } from './actions/projects';\r\nimport Axios from 'axios';\r\nimport PageTemplate from './components/PageTemplate';\r\nimport CreateProjectForm from './components/CreateProjectForm';\r\nimport ProjectInfoPage from './components/ProjectInfoPage';\r\nimport CreateTaskForm from './components/CreateTaskForm';\r\nimport EditProjectForm from './components/EditProjectForm';\r\nimport EditTaskForm from './components/EditTaskForm';\r\nimport NotFoundPage from './components/NotFoundPage';\r\nimport MaintenancePage from './components/MaintenancePage';\r\n\r\nexport default class App extends React.Component {\r\n\r\n  state = {\r\n    doneRetrieving: false\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   Axios.get(`/api/projects/full`).then(res => {\r\n  //     const data = res.data;\r\n  //     this.props.dispatch(addProjects(data));\r\n  //     this.setState({ doneRetrieving: true })\r\n  //   })\r\n\r\n  // }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.doneRetrieving ?\r\n          <Switch>\r\n\r\n            <Route path=\"/\" exact={true}>\r\n              <Homepage />\r\n            </Route>\r\n\r\n            <Route path=\"/maintenance\" exact={true}>\r\n              <PageTemplate content={<MaintenancePage />} />\r\n            </Route>\r\n\r\n            <Route path=\"/projects\" exact={true}>\r\n              <MainProjectPage />\r\n            </Route>\r\n\r\n            <Route path=\"/projects/new\" exact={true}>\r\n              <PageTemplate content={<CreateProjectForm />} />\r\n            </Route>\r\n\r\n            <Route path=\"/projects/:id\" exact={true} component={ProjectInfoPage} />\r\n\r\n            <Route path=\"/projects/:id/edit\" exact={true} render={(props => <PageTemplate {...props} content={<EditProjectForm />} />)} />\r\n\r\n            <Route path=\"/projects/:id/tasks/create\" exact={true} render={(props => <PageTemplate {...props} content={<CreateTaskForm />} />)} />\r\n\r\n            <Route path=\"/projects/:id/tasks/:taskid/edit\" exact={true} render={(props => <PageTemplate {...props} content={<EditTaskForm />} />)} />\r\n\r\n\r\n            <Route>\r\n              <NotFoundPage />\r\n            </Route>\r\n\r\n          </Switch>\r\n          : null}\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","const projectsDefaultState = [];\r\n\r\nexport default (state = projectsDefaultState, action) => {\r\n    switch (action.type) {\r\n\r\n        // Take the objects in the current state array, spread them out in to individual objects inside the new array,\r\n        // add new objects at the end of the array and return it.\r\n        case 'ADD_PROJECTS':\r\n            return [...state, ...action.projects];\r\n\r\n        // If the provided Id provided by the action matches the current projectId being iterated through, return false, thus filtering it out of the returned array.\r\n        // Using a shorthand with object destructuring here. Alternative syntax for this would be the following:\r\n        // return state.filter(project => project.projectId !== action.id);\r\n        case 'REMOVE_PROJECT_BY_ID':\r\n            return state.filter(({ projectId }) => projectId !== action.id);\r\n        case 'UPDATE_PROJECT':\r\n            return state.map(project => {\r\n                if (project.projectId === action.projectId) {\r\n                    return {\r\n                        ...project,\r\n                        ...action.update\r\n                    }\r\n                } else {\r\n                    return project;\r\n                }\r\n            });\r\n        case 'REMOVE_TASK_BY_ID':\r\n            return state.map(project => {\r\n                if (project.projectId === parseInt(action.projectId)) {                    \r\n                    return {...project, \"tasks\": project.tasks.filter(({ taskId }) => taskId !== action.taskId)}\r\n                } else {\r\n                    return project;\r\n                }\r\n            })\r\n        case 'ADD_TASKS':\r\n            return state.map(project => {\r\n                if (project.projectId === action.projectId) {\r\n                    return {\r\n                        ...project,\r\n                        \"tasks\": action.tasks\r\n                    }\r\n                } else {\r\n                    return project;\r\n                }\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};","const filtersDefaultState = {\r\n    \"searchBy\": '',\r\n    \"filterStatusBy\": ''\r\n};\r\n\r\nexport default (state = filtersDefaultState, action) => {\r\n    switch (action.type) {\r\n\r\n        // Spread out the state and overwrite the provided field (and then return the whole object). If a blank value is provided,\r\n        // the filter is reset.\r\n        case 'FILTER_STATUS_BY':\r\n            return { ...state, \"filterStatusBy\": action.status };\r\n        case \"FILTER_By_SEARCH\":\r\n            return { ...state, \"searchBy\": action.search };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport storeConfig from './store/storeConfig';\r\nimport { Provider } from 'react-redux';\r\n// import stateStore from './stateStore/reducerAndStore'\r\n// import { addProjects } from './actions/projects';\r\n// import { filterBySearch } from './actions/filters';\r\n// import { filterStatusBy } from './actions/filters'\r\n// import { addTasks } from './actions/projects';\r\n\r\nconst store = storeConfig();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <React.StrictMode>\r\n        <App dispatch={store.dispatch}/>\r\n      </React.StrictMode>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","import { createStore, combineReducers } from 'redux'\r\nimport projectReducer from '../reducers/projectsReducer'\r\nimport filtersReducer from '../reducers/filtersReducer'\r\n\r\nexport default () => {\r\n    const store = createStore(combineReducers({\r\n        projects: projectReducer,\r\n        filters: filtersReducer\r\n    })\r\n    );\r\n    \r\n    return store;\r\n};"],"sourceRoot":""}